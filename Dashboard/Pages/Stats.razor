@page "/stats"
@implements IObserver<Dictionary<Room, Environment>>
@inject DashboardStore Store

<section class="content-header">
    <h1>Current stats</h1>
</section>

<section class="content">
    <div class="row">
        @if (Rooms != null)
        {
            @foreach (var room in Rooms.Keys)
            {
                <div class="col-md-3">
                    <div class="box">
                        <div class="box-header">
                            <h3 class="box-title">@room.Name</h3>
                        </div>
                        <div class="box-body">
                            <p>@Rooms[room].Temperature C</p>
                            <p>@Rooms[room].Humidity %</p>
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</section>

@functions {
    private Dictionary<Room, Environment> Rooms;
    private IDisposable cancelSubscription;

    protected override void OnInitialized()
    {
        cancelSubscription = Store.Subscribe(this);
        Console.WriteLine("Subscribed to environment messages");
        Console.WriteLine(cancelSubscription);
    }

    public virtual void OnCompleted()
    {
        Console.WriteLine("Finished all environment updates");
        cancelSubscription.Dispose();
    }

    public virtual void OnError(Exception e)
    {
        Console.WriteLine("Error getting environment update");
        Console.WriteLine(e.Message);
    }

    public virtual void OnNext(Dictionary<Room, Environment> rooms)
    {
        this.Rooms = rooms;
        Console.WriteLine(this.Rooms);
        this.StateHasChanged();
    }
}
