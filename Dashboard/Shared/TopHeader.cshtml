@using System.Timers
@inject DashboardStore Store

<header class="main-header">
    <NavLink class="logo" href="" Match="NavLinkMatch.All">
        <Icon Name="IconName.Dashboard"></Icon> H
    </NavLink>
    <div class="top-header">
        <div class="header-content">
            <ul class="header-nav">
                <li class="header-nav-item">
                    <a href="#">
                        <WeatherComponent CurrentCondition="@CurrentCondition"/>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</header>

@functions {
    public Weather CurrentCondition { get; set; }

    protected override async Task OnInitAsync()
    {
        //var timer = new Timer(1 * 1000 * 60 * 60);
        //timer.AutoReset = true;
        //timer.Elapsed += new ElapsedEventHandler(async (sender, args) =>
        //{
        await Store.GetWeather();
        this.CurrentCondition = Store.Weather[Store.Home].Last();
        //});
    }
}
