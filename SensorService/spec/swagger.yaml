swagger: "2.0"
info:
  description: "This is the Home Manager OpenAPI specification"
  version: "1.0.0"
  title: "Home Manager"
  contact:
    email: "mihai@mcostea.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "sensor-service.mcostea.com"
basePath: "/api/v1"
tags:
- name: "home"
  description: "Home CRUD"
- name: "room"
  description: "Room CRUD"
- name: "sensor"
  description: "Sensor CRUD"
- name: "environment"
  description: "Environment CRUD"
schemes:
- "https"
- "http"
paths:
  /home:
    get:
      tags:
      - "home"
      summary: "Get all homes"
      operationId: "getHomes"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Home"
    post:
      tags:
      - "home"
      summary: "Add a new home"
      description: ""
      operationId: "addHome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Home object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Home"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Home"
    put:
      tags:
      - "home"
      summary: "Update an existing home"
      description: ""
      operationId: "updateHome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Home object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Home"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Home not found"
        405:
          description: "Validation exception"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Home"
  /home/{homeId}:
    get:
      tags:
      - "home"
      summary: "Find home by ID"
      description: "Returns a single home"
      operationId: "getHomeById"
      produces:
      - "application/json"
      parameters:
      - name: "homeId"
        in: "path"
        description: "ID of home to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Home"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Home not found"
    delete:
      tags:
      - "home"
      summary: "Deletes a home"
      description: ""
      operationId: "deleteHome"
      produces:
      - "application/json"
      parameters:
      - name: "homeId"
        in: "path"
        description: "Home id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Home not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Home"
  /home/{homeId}/room:
    parameters:
      - name: "homeId"
        in: "path"
        description: "ID of home"
        required: true
        type: "integer"
        format: "int64"
    get:
      tags:
      - "home"
      - "room"
      summary: "Find rooms in home"
      operationId: "getRoomsByHome"
      produces:
      - "application/json"
      responses:
        400:
          description: "Invalid Home ID supplied"
        404:
          description: "Home not found"
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Room"
    post:
      tags:
      - "home"
      - "room"
      summary: "Add a room to home"
      operationId: "addRoomToHome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Room object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Room"
      responses:
        400:
          description: "Invalid Home ID supplied"
        404:
          description: "Home not found"
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Room"
  /room:
    put:
      tags:
      - "room"
      summary: "Update a room in a home"
      operationId: "updateRoomInHome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Room object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Room"
      responses:
        400:
          description: "Invalid Room ID supplied"
        404:
          description: "Room not found"
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Room"
  /room/{roomId}:
    parameters:
      - name: "roomId"
        in: "path"
        description: "ID of the room"
        required: true
        type: "integer"
        format: "int64"
    get:
      tags:
      - "room"
      summary: "Get a room in a home"
      operationId: "getRoomInHomeById"
      responses:
        400:
          description: "Invalid Room ID supplied"
        404:
          description: "Room not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Room"
    delete:
      tags:
      - "room"
      summary: "Delete a room in a home"
      operationId: "deleteRoomInHomeById"
      responses:
        400:
          description: "Invalid Room ID supplied"
        404:
          description: "Room not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Room"
  /room/{roomId}/sensor:
    parameters:
      - name: "roomId"
        in: "path"
        description: "ID of the room"
        required: true
        type: "integer"
        format: "int64"
    get:
      tags:
      - "room"
      - "sensor"
      summary: "Get sensors in a room"
      operationId: "getSensorsInRoom"
      produces:
      - "application/json"
      responses:
        400:
          description: "Invalid Room ID supplied"
        404:
          description: "Room not found"
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sensor"
    post:
      tags:
      - "room"
      - "sensor"
      summary: "Add sensor to a room"
      operationId: "addSensorToRoom"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Sensor object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Sensor"
      responses:
        400:
          description: "Invalid Room ID supplied"
        404:
          description: "Room not found"
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Sensor"
  /sensor:
    put:
      tags:
      - "sensor"
      summary: "Update a sensor"
      operationId: "updateSensor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Sensor object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Sensor"
      responses:
        400:
          description: "Invalid Sensor ID supplied"
        404:
          description: "Sensor not found"
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Sensor"
  /sensor/{sensorId}:
    parameters:
      - name: "sensorId"
        in: "path"
        description: "ID of the sensor"
        required: true
        type: "integer"
        format: "int64"
    get:
      tags:
      - "sensor"
      summary: "Get a sensor"
      operationId: "getSensor"
      responses:
        400:
          description: "Invalid Sensor ID supplied"
        404:
          description: "Sensor not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Sensor"
    delete:
      tags:
      - "sensor"
      summary: "Delete a sensor"
      operationId: "deleteSensor"
      responses:
        400:
          description: "Invalid Sensor ID supplied"
        404:
          description: "Sensor not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Sensor"
  /room/{roomId}/environment:
    parameters:
      - name: "roomId"
        in: "path"
        description: "ID of the room"
        required: true
        type: "integer"
        format: "int64"
    get:
      summary: "Get room environment readings"
      tags:
      - "room"
      - "environment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "startDate"
          in: "query"
          description: "Start date of environment report"
          required: true
          type: "string"
          format: "date-time"
        - name: "endDate"
          in: "query"
          description: "End date of environment report"
          required: true
          type: "string"
          format: "date-time"
      responses:
        400:
          description: "Invalid Room ID or query parameters supplied"
        404:
          description: "Room not found"
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Environment"
    post:
      summary: "Add room environment reading"
      tags:
      - "room"
      - "environment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Environment object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Environment"
      responses:
        400:
          description: "Invalid Room ID supplied"
        404:
          description: "Room not found"
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Environment"
  /environment:
    put:
      tags:
      - "environment"
      summary: "Update an environment reading"
      operationId: "updateEnvironment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Environment object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Environment"
      responses:
        400:
          description: "Invalid Environment ID supplied"
        404:
          description: "Environment reading not found"
        405:
          description: "Invalid input"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Environment"
  /environment/{environmentId}:
    parameters:
      - name: "environmentId"
        in: "path"
        description: "ID of the environment reading"
        required: true
        type: "integer"
        format: "int64"
    get:
      tags:
      - "environment"
      summary: "Get an environment reading"
      operationId: "getEnvironment"
      responses:
        400:
          description: "Invalid Environment ID supplied"
        404:
          description: "Environment reading not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Environment"
    delete:
      tags:
      - "environment"
      summary: "Delete an environment reading"
      operationId: "deleteEnvironment"
      responses:
        400:
          description: "Invalid Environment ID supplied"
        404:
          description: "Environment reading not found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Environment"
definitions:
  Environment:
    type: "object"
    required:
    - "timestamp"
    properties:
      id:
        type: "integer"
        format: "int64"
      timestamp:
        type: "string"
        format: "date-time"
      temperature:
        type: "number"
        format: "double"
      humidity:
        type: "number"
        format: "double"
      motion:
        type: "boolean"
      sensor:
        $ref: "#/definitions/Sensor"
  Sensor:
    type: "object"
    required:
    - "name"
    - "type"
    - "room"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      type:
        type: "string"
  Room:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/Sensor"
  Home:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      address:
        type: "string"
      city:
        type: "string"
      country:
        type: "string"
      rooms:
        type: "array"
        items:
          $ref: "#/definitions/Room"
