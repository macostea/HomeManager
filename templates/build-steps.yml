parameters:
  runTests: 'true'

steps:
  - task: Docker@2
    displayName: 'Docker login'
    inputs:
      containerRegistry: 'Docker Hub'
      command: 'login'
  - bash: |
      docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
      docker buildx create --name mybuilder
      docker buildx use mybuilder
      docker buildx inspect --bootstrap
    displayName: 'Setup buildx'

  - bash: |
      docker buildx build --platform linux/arm,linux/amd64 -t mcostea/homemanager_rabbitmq:$(Build.BuildId) -f deploy/rabbitmq/Dockerfile --push deploy/rabbitmq
    displayName: 'Build RabbitMQ'
    
  - bash: |
      docker buildx build --platform linux/arm,linux/amd64 -t mcostea/homemanager_sensor-service:$(Build.BuildId) -f SensorService/Dockerfile --push .
    displayName: 'Build sensor service'

  - task: Docker@1
    displayName: 'Build sensor service tests'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'Docker Hub'
      dockerFile: SensorService/Dockerfile
      arguments: '--pull --target testrunner'
      imageName: 'mcostea/homemanager_sensor-service:test'
      useDefaultContext: false
      buildContext: '$(Build.SourcesDirectory)'
    condition: eq('${{ parameters.runTests }}', 'true')

  - task: Docker@1
    displayName: 'Run sensor service tests'
    inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Run an image'
        imageName: 'mcostea/homemanager_sensor-service:test'
        envVars: 'CODECOV_TOKEN=$(CODECOV_TOKEN)'
        runInBackground: false
    condition: eq('${{ parameters.runTests }}', 'true')

  - bash: |
      docker buildx build --platform linux/arm,linux/amd64 -t mcostea/homemanager_sensor-listener:$(Build.BuildId) -f SensorListener/Dockerfile --push .
    displayName: 'Build sensor listener'
  
  - bash: |
      docker buildx build --platform linux/arm,linux/amd64 -t mcostea/homemanager_weather-sensor:$(Build.BuildId) -f Sensors/WeatherSensor/Dockerfile --push .
    displayName: 'Build weather sensor'

  - task: Docker@1
    displayName: 'Build SonarCloud scan image'
    inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        dockerFile: scripts/sonarcloud/Dockerfile
        imageName: 'mcostea/homemanager-sonarcloud'
        useDefaultContext: false
        buildContext: '$(System.DefaultWorkingDirectory)'
    condition: eq('${{ parameters.runTests }}', 'true')

  - task: Docker@1
    displayName: 'Run SonarCloud scan'
    inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Run an image'
        imageName: 'mcostea/homemanager-sonarcloud'
        envVars: 'SONAR_TOKEN=$(SONAR_TOKEN)'
        runInBackground: false
    condition: eq('${{ parameters.runTests }}', 'true')
